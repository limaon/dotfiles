########################################################################
# Tmux default config
########################################################################

### General settings {{{
# set -g default-terminal "${TERM}"
set -g default-terminal "screen-256color"
set -g default-command bash
# set -g xterm-keys on
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# set -ga terminal-overrides ",screen-256color*:Tc"
# set-option -g default-terminal "screen-256color"

# Focus events enabled for terminals that support them.
set -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*.
# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Display settings
set-option -g set-titles on
set -g set-titles-string "(s:#S) [w:#I|p:#P] @#H - #W#F"
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'
set -g renumber-windows on
set -g history-limit 5000

# Navigation and mouse integration
set -g mouse on
setw -g status-keys vi
setw -g mode-keys vi

# }}}


### Tmux Bindings {{{
unbind C-b
set-option -g prefix C-s

set-option -g repeat-time 0
set-option -g focus-events on
set -sg escape-time 0


# Toggle mouse on/off
bind-key M \
  set-option -g mouse \;\
  display-message 'Mouse: #{?#{mouse},ON,OFF}'


# Bind to go to the next SESSION
bind-key N switch-client -n

# Bind to go to the previous SESSION
bind-key P switch-client -p

# Creates a new session and attaches the client to it
unbind C
bind-key C new-session

# Kills the current session with confirmation
bind-key X confirm-before -p "Kill session #{session_name}? (y/n)" \
    "switch-client -n \; kill-session -t '#{session_name}'"


# Remover o '\n' das coisas eu copiar no terminal

# Vim-like pane switching
bind -r k select-pane -U
bind -r j select-pane -D
bind -r h select-pane -L
bind -r l select-pane -R

# Resizing pane
bind -n C-M-k resize-pane -U 2
bind -n C-M-j resize-pane -D 2
bind -n C-M-h resize-pane -L 2
bind -n C-M-l resize-pane -R 2

# Move through the panes using Meta + number keys
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9

# Moving windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Reload configuration
bind-key r source-file ~/.config/tmux/tmux.conf \; display " CONFIGURATION RELOADED!! "

# Renumber windows manually
# https://github.com/jasoncodes/dotfiles/blob/master/config/tmux.conf
bind-key R set renumber-windows on\; new-window\; kill-window\; set renumber-windows off\; display " Renumbered "

# Turn a pane into a window
bind-key B break-pane -d

# Sync panes - send what you're typing to other panes.
bind-key C-s \
    if-shell -F "#{?pane_synchronized,1,0}" \
        "setw synchronize-panes off; display-message 'Sync panes: OFF'" \
        "setw synchronize-panes on; display-message 'Sync panes: ON'"

# Open another pane in the same path
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key c new-window -c "#{pane_current_path}"

### Visual Mode (Selection)
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle

### Copy/Paste (normal mode)
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind-key -T copy-mode-vi Y send-keys -X copy-pipe-and-cancel "tr -d '\n' | xclip -selection clipboard -in" \; display-message -d 300 " >> COPIED WITHOUT '\n' << "
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -selection primary -in && xclip -selection clipboard -out | xclip -selection clipboard -in"
# bind-key y run "tmux show-buffer | wl-copy" \; display 'copied'
# bind-key y run "tmux show-buffer | xclip -selection primary -in && xclip -selection clipboard -out | xclip -selection clipboard -in" \; display " Copied "

# Allow system clipboard to be pasted with tmux
# bind-key -n M-p run "wl-paste | tmux load-buffer - ; tmux paste-buffer"
bind-key -n M-p run "xclip -selection clipboard -o | tmux load-buffer - ; tmux paste-buffer"

# }}}


### Layout Presets {{{
bind-key M-w new-window -n work -c $HOME \; \
	split-window -v -p 35 -t 1  \; \
	select-pane -t 1


# <M> - Music
bind-key M-m new-window -n music -c $HOME \; \
	send-keys 'ncmpcpp' 'Enter' \; \
	split-window -h -p 50 -t 2 \; \
	send-keys 'clear && ncspot' 'Enter' \; \
	select-pane -t 1

# <V> - Video
bind-key M-v new-window -n video -c $HOME \; \
	send-keys 'lf ~/Videos' 'Enter' \; \
	split-window -v -p 30 -t 1  \; \
	send-keys 'clear && echo Bottom shell' 'Enter' \; \
	select-pane -t 1
# }}}


# Colors and separators {{{
color_fg="#adb8b8"
color_bg="#00141a"
cl_border_lasted="fg=#657b83"
cl_border_current="fg=#9eacad"
cl_name_pcurrent="#[fg=#b8c1c1,bold,bg=#1a6497]"
cl_name_pane="#[fg=#b8c1c1,nobold,bg=#111a20]"
cl_session="#[fg=#00141a,bold,bg=#657b83]"
cl_prefix="#[fg=#adb8b8,bold,bg=#b7221e]"
cl_selection_mode="#[fg=#00141a,bold,bg=#a57705]"
cl_uptime="#[fg=#adb8b8]#[bg=#1a6497]"
cl_reset="#[fg=#002731]#[bg=default]"
right_cursor_ind="#[fg=#002731,bold,bg=#859901]"
left_sep_space="${cl_reset} "

# Statusbar indicators
ind_session="${cl_session} [SESSION:#S] ${left_sep_space}"
ind_current_window="${cl_name_pcurrent} #I:#W* "
ind_window="${cl_name_pane} #I:#W- "
ind_visual="#{?pane_in_mode, <V>,} "
ind_prefix=" ${cl_prefix}#{?client_prefix, <P>,} "
ind_uptime="${cl_uptime} [UPTIME|#(uptime | awk '{print $3}' | sed 's/,//')] "
ind_tabs="#[fg=#adb8b8,bg=#1a6497] [#[fg=#b6bfbf,bold]TAB:#I#[fg=#adb8b8,nobold]]"
ind_panes="#[fg=#adb8b8,bg=#1a6497][#[fg=#b6bfbf,bold]PANE:#P#[fg=#adb8b8,nobold]] "

# Status bar settings
set-option -g status-interval 1
set-option -g display-panes-time 2000
set-option -g display-time 1000
set-window-option -g monitor-activity off
set-option -g visual-activity on

# Pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

# Clock
set-window-option -g clock-mode-colour "#2aa198"

# Bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour160

# Default statusbar colors
set-option -g status-bg "${color_bg}"
set-option -g status-fg "${color_fg}"

# Inside statusbar
set-option -g status-justify absolute-centre
set-option -g status-left-length 40
set -g status-left "${ind_session}"

# Window status settings
set -g window-status-format "${ind_window}"
set -g window-status-current-format "${ind_current_window}"

set-option -g status-right "${ind_prefix}${cl_selection_mode}${ind_visual}${ind_tabs}${ind_panes}${right_cursor_ind} "

# }}}



# vim:ft=sh
