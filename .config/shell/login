# Personal information
export NAME='Alvaro Oliveira'
export EMAIL='alvarolima1103@outlook.com'

# Preferred programs
export PAGER=less
export EDITOR=nvim
export VISUAL=$EDITOR
export SYSTEMD_EDITOR=$EDITOR
export SUDO_EDITOR=$EDITOR

export CVS_RSH=ssh
export RSYNC_RSH=ssh

# Language
export LANG='en_US.UTF-8'
export LC_ALL=$LANG
export LC_COLLATE=$LANG
export LC_CTYPE=$LANG
export LC_MESSAGES=$LANG
export LC_MONETARY=$LANG
export LC_NUMERIC=$LANG
export LC_TIME=$LANG

### Default XDG path end clean up ${HOME}
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CACHE_HOME="${HOME}/.cache"
export XDG_STATE_HOME="${HOME}/.local/state"
if [ -f ${XDG_CONFIG_HOME}/user-dirs.dirs ]; then
    . ${XDG_CONFIG_HOME}/user-dirs.dirs
    export XDG_DESKTOP_DIR
    export XDG_DOWNLOAD_DIR
    export XDG_TEMPLATES_DIR
    export XDG_PUBLICSHARE_DIR
    export XDG_DOCUMENTS_DIR
    export XDG_MUSIC_DIR
    export XDG_PICTURES_DIR
    export XDG_VIDEOS_DIR
fi


# Python
export PYTHONSTARTUP=$HOME/.config/python/pythonrc


# Less
# export LESS='-F -g -i -M -R -S -w -X -z-4'
export LESS='FRXQ'
export LESSCHARSET='UTF-8'
export LESSHISTFILE='-'
export LESSEDIT="$EDITOR ?lm+%lm. %f"

# Fix QT themes on GTK Desktops
export QT_QPA_PLATFORMTHEME=qt5ct

# enable the X Compose key in GTK
# export GTK_IM_MODULE=xim


# Limits recursive functions, see 'man bash'
[[ -z "$FUNCNEST" ]] && export FUNCNEST=100


# FZF default options
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"


# Exports to clean my home directory
export USERXSESSION="${XDG_CACHE_HOME}/.cache/X11/xsession"
export USERXSESSIONRC="${XDG_CACHE_HOME}/.cache/X11/xsessionrc"
export ERRFILE="${XDG_CACHE_HOME}/X11/xsession-errors"
export XINITRC="${XDG_CACHE_HOME}/X11/xinitrc"
export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME}/asdf/asdfrc"
export ASDF_DATA_DIR="${XDG_DATA_HOME}/asdf"
export ASDF_PYTHON_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/pip/default-python-packages"
export ASDF_NPM_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/npm/default-npm-packages"
export ASDF_GEM_DEFAULT_PACKAGES_FILE="${XDG_CONFIG_HOME}/gem/default-gems"
export CARGO_HOME="${XDG_DATA_HOME}/cargo"
export ELECTRUMDIR="${XDG_DATA_HOME}/electrum"
export GEM_HOME="$(ruby -e 'puts Gem.user_dir' 2>/dev/null)"
export ATOM_HOME="${XDG_DATA_HOME}/atom"
export AZURE_CONFIG_DIR="${XDG_DATA_HOME}/azure"
export CONDARC="${XDG_CONFIG_HOME}/conda/condarc"
export LYNX_CFG="${XDG_CONFIG_HOME}/lynx/lynxrc"
export LYNX_LSS="${XDG_CONFIG_HOME}/lynx/lynx.lss"
export DOCKER_CONFIG="${XDG_CONFIG_HOME}/docker"
export DOT_SAGE="${XDG_CONFIG_HOME}/sage"
export EM_CONFIG="${XDG_CONFIG_HOME}/emscripten/config"
export EM_CACHE="${XDG_CACHE_HOME}/emscripten/cache"
export EM_PORTS="${XDG_DATA_HOME}/emscripten/cache"
export GEM_SPEC_CACHE="${XDG_CACHE_HOME}/gem"
export GRADLE_USER_HOME="${XDG_DATA_HOME}/gradle"
export GRIPHOME="${XDG_CONFIG_HOME}/grip"
export GTK_RC_FILES="${XDG_CONFIG_HOME}/gtk-1.0/gtkrc"
export GTK2_RC_FILES="${XDG_CONFIG_HOME}/gtk-2.0/gtkrc"
export XCURSOR_PATH="/usr/share/icons:$XDG_DATA_HOME/icons"
export ICEAUTHORITY="${XDG_CACHE_HOME}/ICEauthority"
export IMAPFILTER_HOME="${XDG_CONFIG_HOME}/imapfilter"
export IPYTHONDIR="${XDG_CONFIG_HOME}/jupyter"
export IRBRC="${XDG_CONFIG_HOME}/irb/irbrc"
export JUPYTER_CONFIG_DIR="${XDG_CONFIG_HOME}/jupyter"
export KDEHOME="${XDG_CONFIG_HOME}/kde4"
export KODI_DATA="${XDG_DATA_HOME}/kodi"
export LEIN_HOME="${XDG_DATA_HOME}/lein"
export MACHINE_STORAGE_PATH="${XDG_DATA_HOME}/docker-machine"
export MATHEMATICA_USERBASE="${XDG_CONFIG_HOME}/mathematica"
export MAXIMA_USERDIR="${XDG_CONFIG_HOME}/maxima"
export MEDNAFEN_HOME="${XDG_CONFIG_HOME}/mednafen"
export MOST_INITFILE="${XDG_CONFIG_HOME}/mostrc"
export MPLAYER_HOME="${XDG_CONFIG_HOME}/mplayer"
export NODE_REPL_HISTORY="${XDG_DATA_HOME}/node_repl_history"
export NOTMUCH_CONFIG="${XDG_CONFIG_HOME}/notmuch/notmuchrc"
export INPUTRC="${XDG_CONFIG_HOME}/readline/inputr"
export NMBGIT="${XDG_DATA_HOME}/notmuch/nmbug"
export NPM_CONFIG_USERCONFIG="${XDG_CONFIG_HOME}/npm/npmrc"
export NUGET_PACKAGES="${XDG_CACHE_HOME}/NuGetPackages"
export PARALLEL_HOME="${XDG_CONFIG_HOME}/parallel"
export PSQLRC="${XDG_CONFIG_HOME}/pg/psqlrc"
export PSQL_HISTORY="${XDG_CACHE_HOME}/pg/psql_history"
export PGPASSFILE="${XDG_CONFIG_HOME}/pg/pgpass"
export PGSERVICEFILE="${XDG_CONFIG_HOME}/pg/pg_service.conf"
export PYTHON_EGG_CACHE="${XDG_CACHE_HOME}/python-eggs"
export PYLINTHOME="${XDG_CACHE_HOME}/pylint"
export PLTUSERHOME="${XDG_DATA_HOME}/racket"
export RLWRAP_HOME="${XDG_DATA_HOME}/rlwrap"
export RUSTUP_HOME="${XDG_DATA_HOME}/rustup"
export RXVT_SOCKET="${XDG_RUNTIME_DIR}/urxvtd"
export SCREENRC="${XDG_CONFIG_HOME}/screen/screenrc"
export SPACEMACSDIR="${XDG_CONFIG_HOME}/spacemacs"
export STACK_ROOT="${XDG_DATA_HOME}/stack"
export TASKDATA="${XDG_DATA_HOME}/task"
export TASKRC="${XDG_CONFIG_HOME}/task/taskrc"
export TERMINFO="${XDG_DATA_HOME}/terminfo"
export TEXMFHOME="${XDG_DATA_HOME}/texmf"
export TEXMFVAR="${XDG_CACHE_HOME}/texlive/texmf-var"
export TEXMFCONFIG="${XDG_CONFIG_HOME}/texlive/texmf-config"
export UNCRUSTIFY_CONFIG="${XDG_CONFIG_HOME}/uncrustify/uncrustify.cfg"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME}/ansible/ansible.cfg"
export UNISON="${XDG_DATA_HOME}/unison"
export VAGRANT_HOME="${XDG_DATA_HOME}/vagrant"
export VAGRANT_ALIAS_FILE="${XDG_DATA_HOME}/vagrant/aliases"
export VSCODE_PORTABLE="${XDG_DATA_HOME}/vscode"
export WEECHAT_HOME="${XDG_CONFIG_HOME}/weechat"
export WORKON_HOME="${XDG_DATA_HOME}/virtualenvs"
export WGETRC="${XDG_CONFIG_HOME}/wget/wgetrc"
export WINEPREFIX="${XDG_DATA_HOME}/wineprefixes/default"
export MYSQL_HISTFILE="${XDG_DATA_HOME}/mysql_history"
export ZDOTDIR="${XDG_CONFIG_HOME}/zsh"
export TMUX_TMPDIR="${XDG_RUNTIME_DIR}"
export ANDROID_SDK_HOME="${XDG_CONFIG_HOME}/android"
export GOPATH="${XDG_DATA_HOME}/go"
export GOMODCACHE="${XDG_CACHE_HOME}/go/mod"
export ANSIBLE_CONFIG="${XDG_CONFIG_HOME}/ansible/ansible.cfg"
export MBSYNCRC="${XDG_CONFIG_HOME}/mbsync/config"
export PYTHONHISTORY="${XDG_CACHE_HOME}/pyhistory"
export SQLITE_HISTORY="${XDG_DATA_HOME}/sqlite_history"
export SSH_AUTH_SOCK="${XDG_RUNTIME_DIR}/ssh-agent.socket"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME}/password-store"
export GDK_SCALE=1
export GDK_DPI_SCALE=1


# make less more friendly for non-text input files, see lesspipe(1)
if which lesspipe >/dev/null 2>&1; then
    eval "$(lesspipe)"
elif which lesspipe.sh >/dev/null 2>&1; then
    export LESSOPEN="|lesspipe.sh %s"
fi

# Path settings
pathprepend ~/bin PATH
export MANPATH=~/share/man:$MANPATH
pathprepend ~/lib LD_LIBRARY_PATH
pathprepend ~/include CPATH

# The current directory should never be in $PATH
pathremove . PATH
pathremove "" PATH

ssource ~/.cofing/shell/login_local

# Add all directories in `~/.local/bin` to $PATH
if [[ -d "$HOME/.local/bin" ]]; then
    export PATH="$PATH:$(find ~/.local/bin -type d | paste -sd ':' -)"
fi

## Source asdf-vm settings
[[ -f "/opt/asdf-vm/asdf.sh" ]] && source /opt/asdf-vm/asdf.sh
[[ -f "${ASDF_DATA_DIR}/asdf.sh" ]] && source ${ASDF_DATA_DIR}/asdf.sh
[[ -f "${ASDF_DATA_DIR}/completions/asdf.bash" ]] && source ${ASDF_DATA_DIR}/completions/asdf.bash


## Java setup for asdf
export _JAVA_OPTIONS="-Dawt.useSystemAAFontSettings=gasp -Djava.util.prefs.userRoot=${XDG_CONFIG_HOME}/java"
if [[ -f "${ASDF_DATA_DIR}/plugins/java/set-java-home.bash" ]]; then
    source "${ASDF_DATA_DIR}/plugins/java/set-java-home.bash"
fi

# source fzf completion file
[ -f /usr/share/fzf/completion.bash ] && source /usr/share/fzf/completion.bash

# Start graphical server on tty1 if not already running.
# https://wiki.archlinux.org/index.php/Xinit#Autostart_X_at_login
# if [[ -z "${DISPLAY}" ]] && [[ "${XDG_VTNR}" -eq 1 ]]; then
# 	exec startx "$XINITRC"
# fi


# vim:ft=sh
