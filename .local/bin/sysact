#!/usr/bin/env bash

# System control script via command line

# Global settings
export DISPLAY=${DISPLAY:-:0}
export XAUTHORITY=${XAUTHORITY:-"$HOME/.Xauthority"}
WM="${WM:-i3}"
# BLUR="0x15"
# FALLBACK_COLOR="5b5b5b"

# Function to determine the appropriate control command for system power operations
ctl() {
    case $(readlink -f /sbin/init) in
        *systemd*) echo systemctl ;;
        *) echo loginctl ;;
    esac
}

# Function to turn back time display
display_back_time() {
    xset dpms 300 480 600 # after 10 minutes
}

# Optimized screen lock function
lock_screen() {
    # Configure DPMS for fast response (5s standby/suspend/off)
    xset dpms 8 120 300

    # Pause any media players (mpc is for MPD)
    mpc pause >/dev/null 2>&1 || true

    # Create temporary image file in RAM disk for faster access
    local TEMP_IMG
    TEMP_IMG=$(mktemp /dev/shm/i3lock-XXXXXX.png)

    # Optimized image processing pipeline:
    # 1. Capture screen with maim (low quality png)
    # 2. Resize down to 10% then back up (pixelation effect)
    # 3. Save to temp file
    # 4. Lock with i3lock using the processed image
    maim --hidecursor --format=png --quality 3 -q 2>/dev/null | \
        convert - -resize 10% -resize 1000% -quality 5 "$TEMP_IMG" 2>/dev/null

    i3lock -i "$TEMP_IMG" -n

    rm -f "$TEMP_IMG"
    display_back_time
}

# Function to close specific applications before shutting down
cleanup() {
	for app in qbittorrent goldendict keepassxc nekobox; do
        pkill -x "$app" >/dev/null 2>&1
    done
    sleep 0.33
}

# Function to display help message
print_help() {
    echo "Usage: $0 [option]"
    echo "Options:"
    echo "  lock         Lock the screen with a blur effect"
    echo "  leave        Exit the window manager ($WM)"
    echo "  renew        Restart the window manager ($WM)"
    echo "  reboot       Reboot the system"
    echo "  shutdown     Shutdown the system"
    echo "  sleep        Suspend the system"
    echo "  hibernate    Hibernate the system"
    echo "  display-off  Turn off the monitor"
    echo "  help         Show this help message"
}

# Main function to handle system control actions
main() {
    local action="${1:-help}"

    case "$action" in
        lock|screenlock)
            lock_screen
            ;;
        leave|exit|quit)
            if [[ "$WM" == "i3" ]]; then
                i3-msg -q exit
            else
                kill -TERM "$(pgrep -u "$USER" "\bdwm$")" >/dev/null 2>&1
            fi
            ;;
        renew|restart|reload)
            if [[ "$WM" == "i3" ]]; then
                i3-msg -q restart
            else
                kill -HUP "$(pgrep -u "$USER" "\bdwm$")" >/dev/null 2>&1
            fi
            ;;
        hibernate|hib)
            lock_screen
            $(ctl) hibernate
            ;;
        sleep|suspend)
            lock_screen
            $(ctl) suspend
            ;;
        reboot|restart)
            cleanup
            $(ctl) reboot -i
            ;;
        shutdown|poweroff|off)
            cleanup
            $(ctl) poweroff -i
            ;;
        display-off|monitor-off)
            display_off
            ;;
        help|-h|--help)
            print_help
            ;;
        *)
            echo "Error: Invalid option '$action'"
            print_help
            exit 1
            ;;
    esac
}

# Execute the main function
main "$@"
