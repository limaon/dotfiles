#!/usr/bin/env bash

# Simple script to quickly pick a color with notifications

# Global variables
FORMAT="HEX"
ICON_PATH="/tmp/color_icon.png"
NOTIFICATION_ID=1001

# Function to display usage message
usage() {
  echo "Usage: \"$0\" [options]"
  echo "Options:"
  echo "  -f FORMAT   Set the color format (default: hex)"
  echo "  -h          Display this help message"
  exit 1
}

# Check if required commands are available
for cmd in xcolor xclip dunstify magick; do
  if ! command -v "$cmd" >/dev/null 2>&1; then
    echo >&2 "Error: '$cmd' command not found. Please install it first."
    exit 1
  fi
done

# Parse command-line options
while getopts "f:h" OPTION; do
  case "$OPTION" in
    f)
      FORMAT="$OPTARG"
      ;;
    h)
      usage
      ;;
    *)
      usage
      ;;
  esac
done

# Main function to pick and copy color
main() {
  local color

  # Notify the user that color selection has started
  dunstify -u low -r "$NOTIFICATION_ID" -i "colorgrab" "Picking color..."

  # Capture the color
  color="$(xcolor -P 100 -f "$FORMAT"!)" || {
    dunstify -u critical -r "$NOTIFICATION_ID" -i "error" "Failed to pick color."
    exit 1
  }

  if [[ -n "$color" ]]; then
    # Remove '#' character if present
    color="${color#\#}"

    magick -size 100x100 "xc:#$color" "$ICON_PATH"
    printf "%s" "$color" | xclip -selection clipboard
    dunstify -u low -r "$NOTIFICATION_ID" -i "$ICON_PATH" "Color #$color copied to clipboard."

    sleep 5 && rm -f "$ICON_PATH" &
  else
    dunstify -u critical -r "$NOTIFICATION_ID" -i "error" "Failed to pick color."
    exit 1
  fi
}

main
